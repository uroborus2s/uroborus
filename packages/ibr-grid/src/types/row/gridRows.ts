export type GridRowId = string | number;

export type GridRowModel<T = { [key: string]: any }> = T;

export type GridRowTrees = Record<GridRowId, GridRowNode>;

export type GridKeyValue = string | number | boolean;

export interface GridRowNode {
  /**
   * grid 行id。
   */
  id: GridRowId;
  /**
   * 折叠子行ID。
   * @default []
   */
  children?: GridRowId[];
  /**
   * 父级的行ID(如果此行是顶级行，则为空)。
   */
  parent: GridRowId | null;
  /**
   * 行的当前展开状态。
   * @default false
   */
  childrenExpanded?: boolean;
  /**
   * 树中行的深度，从0开始。
   */
  depth: number;
  /**
   * 用于对此行的子项进行分组的键。
   */
  groupingKey: GridKeyValue;
  /**
   * 用于对此行的子项进行分组的字段。
   * 如果没有使用任何字段对此行的子项进行分组，则为`null`。
   */
  groupingField: string | null;
  /**
   * 如果为`true`，则自动添加该节点以填补树结构中的空白。
   * @default false
   */
  isAutoGenerated?: boolean;
}
